' //////////////////////////////////////////////////////////////
' // <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
' //////////////////////////////////////////////////////////////
' // Code is generated on: 
' // Code is generated using templates: SD.TemplateBindings.SharedTemplates
' // Templates vendor: Solutions Design.
' //////////////////////////////////////////////////////////////
Imports System
Imports System.Collections.Generic
Imports DAL.EntityClasses
Imports DAL.HelperClasses
Imports DAL.RelationClasses

Imports SD.LLBLGen.Pro.ORMSupportClasses

' __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
' __LLBLGENPRO_USER_CODE_REGION_END
Namespace DAL.FactoryClasses

	''' <summary>general base Class For the generated factories</summary>
	<Serializable()> _
	Public Class EntityFactoryBase2(Of TEntity As {EntityBase2, IEntity2})
			Inherits EntityFactoryCore2
		Private _isInHierarchy As Boolean

		''' <summary>CTor</summary>
		''' <param name="entityName">Name of the entity.</param>
		''' <param name="typeOfEntity">The type of entity.</param>
		''' <param name="isInHierarchy">If True, the entity Of this factory Is In an inheritance hierarchy, False otherwise</param>
		Public Sub New(entityName As String, typeOfEntity As DAL.EntityType, isInHierarchy As Boolean)
			MyBase.New(entityName, CInt(typeOfEntity))
			_isInHierarchy = isInHierarchy
		End Sub
		
		''' <inheritdoc/>
		Public Overrides Overloads Function CreateEntityFromEntityTypeValue(entityTypeValue As Integer) As IEntity2
			Return GeneralEntityFactory.Create(CType(entityTypeValue, DAL.EntityType))
		End Function
		
		''' <inheritdoc/>
		Public Overrides Function CreateFields() As IEntityFields2
			Return ModelInfoProviderSingleton.GetInstance().GetEntityFields(Me.ForEntityName)
		End Function
		
		''' <inheritdoc/>
		Public Overrides Function  CreateHierarchyRelations(objectAlias As String) As IRelationCollection
			Return ModelInfoProviderSingleton.GetInstance().GetHierarchyRelations(ForEntityName, objectAlias)
		End Function

		''' <inheritdoc/>
		Public Overrides Function GetEntityFactory(fieldValues As Object(), entityFieldStartIndexesPerEntity As Dictionary(Of String, Integer)) As IEntityFactory2
			Dim toReturn As IEntityFactory2 =  CType(ModelInfoProviderSingleton.GetInstance().GetEntityFactory(ForEntityName, fieldValues, entityFieldStartIndexesPerEntity), IEntityFactory2)
			If toReturn Is Nothing Then
				toReturn = Me
			End If
			Return toReturn
		End Function
		
		''' <inheritdoc/>
		Public Overrides Function GetEntityTypeFilter(negate As Boolean, objectAlias As String) As IPredicateExpression
			Return ModelInfoProviderSingleton.GetInstance().GetEntityTypeFilter(ForEntityName, objectAlias, negate)
		End Function
										
		''' <inheritdoc/>
		Public Overrides Function CreateEntityCollection() As IEntityCollection2 
			Return New EntityCollection(Of TEntity)(Me)
		End Function
		
		''' <inheritdoc/>
		Public Overrides Function CreateHierarchyFields() As IEntityFields2 
			Return If(_isInHierarchy, New EntityFields2(ModelInfoProviderSingleton.GetInstance().GetHierarchyFields(ForEntityName), ModelInfoProviderSingleton.GetInstance(), Nothing), MyBase.CreateHierarchyFields())
		End Function

		''' <inheritdoc />
		Protected Overrides ReadOnly Property ForEntityType As Type
			Get 
				Return GetType(TEntity)
			End Get
		End Property
	End Class
	
	''' <summary>Factory to create new, empty AttivitaEntity objects.</summary>
	<Serializable()> _
	Public Class AttivitaEntityFactory 
		Inherits EntityFactoryBase2(Of AttivitaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AttivitaEntity", DAL.EntityType.AttivitaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AttivitaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty AttrezzaturaAttivitaEntity objects.</summary>
	<Serializable()> _
	Public Class AttrezzaturaAttivitaEntityFactory 
		Inherits EntityFactoryBase2(Of AttrezzaturaAttivitaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AttrezzaturaAttivitaEntity", DAL.EntityType.AttrezzaturaAttivitaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AttrezzaturaAttivitaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty AuditEntity objects.</summary>
	<Serializable()> _
	Public Class AuditEntityFactory 
		Inherits EntityFactoryBase2(Of AuditEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AuditEntity", DAL.EntityType.AuditEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AuditEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty AziendaEntity objects.</summary>
	<Serializable()> _
	Public Class AziendaEntityFactory 
		Inherits EntityFactoryBase2(Of AziendaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AziendaEntity", DAL.EntityType.AziendaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AziendaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty AziendaProdottoEntity objects.</summary>
	<Serializable()> _
	Public Class AziendaProdottoEntityFactory 
		Inherits EntityFactoryBase2(Of AziendaProdottoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AziendaProdottoEntity", DAL.EntityType.AziendaProdottoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AziendaProdottoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ComuneEntity objects.</summary>
	<Serializable()> _
	Public Class ComuneEntityFactory 
		Inherits EntityFactoryBase2(Of ComuneEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ComuneEntity", DAL.EntityType.ComuneEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ComuneEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ContattoEntity objects.</summary>
	<Serializable()> _
	Public Class ContattoEntityFactory 
		Inherits EntityFactoryBase2(Of ContattoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ContattoEntity", DAL.EntityType.ContattoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ContattoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty DichiarazioneEntity objects.</summary>
	<Serializable()> _
	Public Class DichiarazioneEntityFactory 
		Inherits EntityFactoryBase2(Of DichiarazioneEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("DichiarazioneEntity", DAL.EntityType.DichiarazioneEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new DichiarazioneEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty DichiarazioneOnLineEntity objects.</summary>
	<Serializable()> _
	Public Class DichiarazioneOnLineEntityFactory 
		Inherits EntityFactoryBase2(Of DichiarazioneOnLineEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("DichiarazioneOnLineEntity", DAL.EntityType.DichiarazioneOnLineEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new DichiarazioneOnLineEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty EventoAziendaEntity objects.</summary>
	<Serializable()> _
	Public Class EventoAziendaEntityFactory 
		Inherits EntityFactoryBase2(Of EventoAziendaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("EventoAziendaEntity", DAL.EntityType.EventoAziendaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new EventoAziendaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty IncassoEntity objects.</summary>
	<Serializable()> _
	Public Class IncassoEntityFactory 
		Inherits EntityFactoryBase2(Of IncassoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("IncassoEntity", DAL.EntityType.IncassoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new IncassoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty LicenzaAziendaEntity objects.</summary>
	<Serializable()> _
	Public Class LicenzaAziendaEntityFactory 
		Inherits EntityFactoryBase2(Of LicenzaAziendaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("LicenzaAziendaEntity", DAL.EntityType.LicenzaAziendaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new LicenzaAziendaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty MaterialeEntity objects.</summary>
	<Serializable()> _
	Public Class MaterialeEntityFactory 
		Inherits EntityFactoryBase2(Of MaterialeEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("MaterialeEntity", DAL.EntityType.MaterialeEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new MaterialeEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty MaterialeQuadroEntity objects.</summary>
	<Serializable()> _
	Public Class MaterialeQuadroEntityFactory 
		Inherits EntityFactoryBase2(Of MaterialeQuadroEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("MaterialeQuadroEntity", DAL.EntityType.MaterialeQuadroEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new MaterialeQuadroEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ParametroEntity objects.</summary>
	<Serializable()> _
	Public Class ParametroEntityFactory 
		Inherits EntityFactoryBase2(Of ParametroEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ParametroEntity", DAL.EntityType.ParametroEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ParametroEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ProdottoEntity objects.</summary>
	<Serializable()> _
	Public Class ProdottoEntityFactory 
		Inherits EntityFactoryBase2(Of ProdottoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ProdottoEntity", DAL.EntityType.ProdottoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ProdottoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ProdottoDichiaratoEntity objects.</summary>
	<Serializable()> _
	Public Class ProdottoDichiaratoEntityFactory 
		Inherits EntityFactoryBase2(Of ProdottoDichiaratoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ProdottoDichiaratoEntity", DAL.EntityType.ProdottoDichiaratoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ProdottoDichiaratoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ProvinciaEntity objects.</summary>
	<Serializable()> _
	Public Class ProvinciaEntityFactory 
		Inherits EntityFactoryBase2(Of ProvinciaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ProvinciaEntity", DAL.EntityType.ProvinciaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ProvinciaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty QuadroEntity objects.</summary>
	<Serializable()> _
	Public Class QuadroEntityFactory 
		Inherits EntityFactoryBase2(Of QuadroEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("QuadroEntity", DAL.EntityType.QuadroEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new QuadroEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty RegioneEntity objects.</summary>
	<Serializable()> _
	Public Class RegioneEntityFactory 
		Inherits EntityFactoryBase2(Of RegioneEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("RegioneEntity", DAL.EntityType.RegioneEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new RegioneEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty RigaDichiarazioneEntity objects.</summary>
	<Serializable()> _
	Public Class RigaDichiarazioneEntityFactory 
		Inherits EntityFactoryBase2(Of RigaDichiarazioneEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("RigaDichiarazioneEntity", DAL.EntityType.RigaDichiarazioneEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new RigaDichiarazioneEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty RiunioneEntity objects.</summary>
	<Serializable()> _
	Public Class RiunioneEntityFactory 
		Inherits EntityFactoryBase2(Of RiunioneEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("RiunioneEntity", DAL.EntityType.RiunioneEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new RiunioneEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty RuoloUtenteEntity objects.</summary>
	<Serializable()> _
	Public Class RuoloUtenteEntityFactory 
		Inherits EntityFactoryBase2(Of RuoloUtenteEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("RuoloUtenteEntity", DAL.EntityType.RuoloUtenteEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new RuoloUtenteEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ScadenzaEntity objects.</summary>
	<Serializable()> _
	Public Class ScadenzaEntityFactory 
		Inherits EntityFactoryBase2(Of ScadenzaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ScadenzaEntity", DAL.EntityType.ScadenzaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ScadenzaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty SedeEntity objects.</summary>
	<Serializable()> _
	Public Class SedeEntityFactory 
		Inherits EntityFactoryBase2(Of SedeEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("SedeEntity", DAL.EntityType.SedeEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new SedeEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty UtenteEntity objects.</summary>
	<Serializable()> _
	Public Class UtenteEntityFactory 
		Inherits EntityFactoryBase2(Of UtenteEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("UtenteEntity", DAL.EntityType.UtenteEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new UtenteEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty AllegatoEntity objects.</summary>
	<Serializable()> _
	Public Class AllegatoEntityFactory 
		Inherits EntityFactoryBase2(Of AllegatoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AllegatoEntity", DAL.EntityType.AllegatoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AllegatoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty AziendaAllegatoEntity objects.</summary>
	<Serializable()> _
	Public Class AziendaAllegatoEntityFactory 
		Inherits EntityFactoryBase2(Of AziendaAllegatoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AziendaAllegatoEntity", DAL.EntityType.AziendaAllegatoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AziendaAllegatoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty CodiciCerEntity objects.</summary>
	<Serializable()> _
	Public Class CodiciCerEntityFactory 
		Inherits EntityFactoryBase2(Of CodiciCerEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("CodiciCerEntity", DAL.EntityType.CodiciCerEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new CodiciCerEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty DettaglioAllegatoEntity objects.</summary>
	<Serializable()> _
	Public Class DettaglioAllegatoEntityFactory 
		Inherits EntityFactoryBase2(Of DettaglioAllegatoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("DettaglioAllegatoEntity", DAL.EntityType.DettaglioAllegatoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new DettaglioAllegatoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty AliquotaIvaEntity objects.</summary>
	<Serializable()> _
	Public Class AliquotaIvaEntityFactory 
		Inherits EntityFactoryBase2(Of AliquotaIvaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("AliquotaIvaEntity", DAL.EntityType.AliquotaIvaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new AliquotaIvaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty CategoriaEntity objects.</summary>
	<Serializable()> _
	Public Class CategoriaEntityFactory 
		Inherits EntityFactoryBase2(Of CategoriaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("CategoriaEntity", DAL.EntityType.CategoriaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new CategoriaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty EventoEntity objects.</summary>
	<Serializable()> _
	Public Class EventoEntityFactory 
		Inherits EntityFactoryBase2(Of EventoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("EventoEntity", DAL.EntityType.EventoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new EventoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty FormaGiuridicaEntity objects.</summary>
	<Serializable()> _
	Public Class FormaGiuridicaEntityFactory 
		Inherits EntityFactoryBase2(Of FormaGiuridicaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("FormaGiuridicaEntity", DAL.EntityType.FormaGiuridicaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new FormaGiuridicaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty InfoStatoEntity objects.</summary>
	<Serializable()> _
	Public Class InfoStatoEntityFactory 
		Inherits EntityFactoryBase2(Of InfoStatoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("InfoStatoEntity", DAL.EntityType.InfoStatoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new InfoStatoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty ModalitaPagamentoEntity objects.</summary>
	<Serializable()> _
	Public Class ModalitaPagamentoEntityFactory 
		Inherits EntityFactoryBase2(Of ModalitaPagamentoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("ModalitaPagamentoEntity", DAL.EntityType.ModalitaPagamentoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new ModalitaPagamentoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty QuotaAdesioneEntity objects.</summary>
	<Serializable()> _
	Public Class QuotaAdesioneEntityFactory 
		Inherits EntityFactoryBase2(Of QuotaAdesioneEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("QuotaAdesioneEntity", DAL.EntityType.QuotaAdesioneEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new QuotaAdesioneEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty RuoloContattoEntity objects.</summary>
	<Serializable()> _
	Public Class RuoloContattoEntityFactory 
		Inherits EntityFactoryBase2(Of RuoloContattoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("RuoloContattoEntity", DAL.EntityType.RuoloContattoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new RuoloContattoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty StatoSocioEntity objects.</summary>
	<Serializable()> _
	Public Class StatoSocioEntityFactory 
		Inherits EntityFactoryBase2(Of StatoSocioEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("StatoSocioEntity", DAL.EntityType.StatoSocioEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new StatoSocioEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TipoAttivitaEntity objects.</summary>
	<Serializable()> _
	Public Class TipoAttivitaEntityFactory 
		Inherits EntityFactoryBase2(Of TipoAttivitaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TipoAttivitaEntity", DAL.EntityType.TipoAttivitaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TipoAttivitaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TipoAttrezzaturaEntity objects.</summary>
	<Serializable()> _
	Public Class TipoAttrezzaturaEntityFactory 
		Inherits EntityFactoryBase2(Of TipoAttrezzaturaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TipoAttrezzaturaEntity", DAL.EntityType.TipoAttrezzaturaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TipoAttrezzaturaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TipoLicenzaEntity objects.</summary>
	<Serializable()> _
	Public Class TipoLicenzaEntityFactory 
		Inherits EntityFactoryBase2(Of TipoLicenzaEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TipoLicenzaEntity", DAL.EntityType.TipoLicenzaEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TipoLicenzaEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TipoMaterialeEntity objects.</summary>
	<Serializable()> _
	Public Class TipoMaterialeEntityFactory 
		Inherits EntityFactoryBase2(Of TipoMaterialeEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TipoMaterialeEntity", DAL.EntityType.TipoMaterialeEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TipoMaterialeEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TipoQuadroEntity objects.</summary>
	<Serializable()> _
	Public Class TipoQuadroEntityFactory 
		Inherits EntityFactoryBase2(Of TipoQuadroEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TipoQuadroEntity", DAL.EntityType.TipoQuadroEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TipoQuadroEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TipoSedeEntity objects.</summary>
	<Serializable()> _
	Public Class TipoSedeEntityFactory 
		Inherits EntityFactoryBase2(Of TipoSedeEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TipoSedeEntity", DAL.EntityType.TipoSedeEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TipoSedeEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TipoSocioEntity objects.</summary>
	<Serializable()> _
	Public Class TipoSocioEntityFactory 
		Inherits EntityFactoryBase2(Of TipoSocioEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TipoSocioEntity", DAL.EntityType.TipoSocioEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TipoSocioEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty TitoloContattoEntity objects.</summary>
	<Serializable()> _
	Public Class TitoloContattoEntityFactory 
		Inherits EntityFactoryBase2(Of TitoloContattoEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("TitoloContattoEntity", DAL.EntityType.TitoloContattoEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new TitoloContattoEntity(fields)
		End Function

	End Class	
	''' <summary>Factory to create new, empty UnitaMisuraEntity objects.</summary>
	<Serializable()> _
	Public Class UnitaMisuraEntityFactory 
		Inherits EntityFactoryBase2(Of UnitaMisuraEntity)

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("UnitaMisuraEntity", DAL.EntityType.UnitaMisuraEntity, False)
		End Sub

		''' <inheritdoc />
		Protected Overrides Function CreateImpl(fields As IEntityFields2) As  IEntity2
			Return new UnitaMisuraEntity(fields)
		End Function

	End Class

	''' <summary>Factory to create new, empty Entity objects based on the entity type specified. Uses entity specific factory objects</summary>
	<Serializable()> _
	Public Class GeneralEntityFactory
		''' <summary>Creates a new, empty Entity object of the type specified</summary>
		''' <param name="entityTypeToCreate">The entity type to create.</param>
		''' <returns>A new, empty Entity object.</returns>
		Public Shared Function Create(entityTypeToCreate As DAL.EntityType) As IEntity2 
			Dim factoryToUse = EntityFactoryFactory.GetFactory(entityTypeToCreate)
			Dim toReturn As IEntity2 = Nothing
			If Not factoryToUse Is Nothing Then
				toReturn = factoryToUse.Create()
			End If
			Return toReturn
		End Function		
	End Class
	
	''' <summary>Class which Is used To obtain the entity factory based On the .NET type of the entity. </summary>
	<Serializable()> _
	Public Class EntityFactoryFactory
		Private Shared _factoryPerType As Dictionary(Of Type, IEntityFactory2) = New Dictionary(Of Type, IEntityFactory2)()

		''' <summary>Initializes the <see cref="EntityFactoryFactory"/> Class.</summary>
		Shared Sub New()
			For Each entityTypeValue As Integer In [Enum].GetValues(GetType(DAL.EntityType))
				Dim factory = GetFactory(CType(entityTypeValue, DAL.EntityType))
				_factoryPerType.Add(If(factory.ForEntityType, factory.Create().GetType()), factory)
			Next
		End Sub

		''' <summary>Gets the factory of the entity With the .NET type specified</summary>
		''' <param name="typeOfEntity">The type of entity.</param>
		''' <returns>factory To use Or null If Not found</returns>
		Public Shared Function GetFactory(typeOfEntity As Type) As IEntityFactory2
			Return _factoryPerType.GetValue(typeOfEntity)
		End Function

		''' <summary>Gets the factory of the entity With the DAL.EntityType specified</summary>
		''' <param name="typeOfEntity">The type of entity.</param>
		''' <returns>factory To use Or null If Not found</returns>
		Public Shared Function GetFactory(typeOfEntity As DAL.EntityType) As IEntityFactory2
			Select Case typeOfEntity
				Case DAL.EntityType.AttivitaEntity
					Return New AttivitaEntityFactory()
				Case DAL.EntityType.AttrezzaturaAttivitaEntity
					Return New AttrezzaturaAttivitaEntityFactory()
				Case DAL.EntityType.AuditEntity
					Return New AuditEntityFactory()
				Case DAL.EntityType.AziendaEntity
					Return New AziendaEntityFactory()
				Case DAL.EntityType.AziendaProdottoEntity
					Return New AziendaProdottoEntityFactory()
				Case DAL.EntityType.ComuneEntity
					Return New ComuneEntityFactory()
				Case DAL.EntityType.ContattoEntity
					Return New ContattoEntityFactory()
				Case DAL.EntityType.DichiarazioneEntity
					Return New DichiarazioneEntityFactory()
				Case DAL.EntityType.DichiarazioneOnLineEntity
					Return New DichiarazioneOnLineEntityFactory()
				Case DAL.EntityType.EventoAziendaEntity
					Return New EventoAziendaEntityFactory()
				Case DAL.EntityType.IncassoEntity
					Return New IncassoEntityFactory()
				Case DAL.EntityType.LicenzaAziendaEntity
					Return New LicenzaAziendaEntityFactory()
				Case DAL.EntityType.MaterialeEntity
					Return New MaterialeEntityFactory()
				Case DAL.EntityType.MaterialeQuadroEntity
					Return New MaterialeQuadroEntityFactory()
				Case DAL.EntityType.ParametroEntity
					Return New ParametroEntityFactory()
				Case DAL.EntityType.ProdottoEntity
					Return New ProdottoEntityFactory()
				Case DAL.EntityType.ProdottoDichiaratoEntity
					Return New ProdottoDichiaratoEntityFactory()
				Case DAL.EntityType.ProvinciaEntity
					Return New ProvinciaEntityFactory()
				Case DAL.EntityType.QuadroEntity
					Return New QuadroEntityFactory()
				Case DAL.EntityType.RegioneEntity
					Return New RegioneEntityFactory()
				Case DAL.EntityType.RigaDichiarazioneEntity
					Return New RigaDichiarazioneEntityFactory()
				Case DAL.EntityType.RiunioneEntity
					Return New RiunioneEntityFactory()
				Case DAL.EntityType.RuoloUtenteEntity
					Return New RuoloUtenteEntityFactory()
				Case DAL.EntityType.ScadenzaEntity
					Return New ScadenzaEntityFactory()
				Case DAL.EntityType.SedeEntity
					Return New SedeEntityFactory()
				Case DAL.EntityType.UtenteEntity
					Return New UtenteEntityFactory()
				Case DAL.EntityType.AllegatoEntity
					Return New AllegatoEntityFactory()
				Case DAL.EntityType.AziendaAllegatoEntity
					Return New AziendaAllegatoEntityFactory()
				Case DAL.EntityType.CodiciCerEntity
					Return New CodiciCerEntityFactory()
				Case DAL.EntityType.DettaglioAllegatoEntity
					Return New DettaglioAllegatoEntityFactory()
				Case DAL.EntityType.AliquotaIvaEntity
					Return New AliquotaIvaEntityFactory()
				Case DAL.EntityType.CategoriaEntity
					Return New CategoriaEntityFactory()
				Case DAL.EntityType.EventoEntity
					Return New EventoEntityFactory()
				Case DAL.EntityType.FormaGiuridicaEntity
					Return New FormaGiuridicaEntityFactory()
				Case DAL.EntityType.InfoStatoEntity
					Return New InfoStatoEntityFactory()
				Case DAL.EntityType.ModalitaPagamentoEntity
					Return New ModalitaPagamentoEntityFactory()
				Case DAL.EntityType.QuotaAdesioneEntity
					Return New QuotaAdesioneEntityFactory()
				Case DAL.EntityType.RuoloContattoEntity
					Return New RuoloContattoEntityFactory()
				Case DAL.EntityType.StatoSocioEntity
					Return New StatoSocioEntityFactory()
				Case DAL.EntityType.TipoAttivitaEntity
					Return New TipoAttivitaEntityFactory()
				Case DAL.EntityType.TipoAttrezzaturaEntity
					Return New TipoAttrezzaturaEntityFactory()
				Case DAL.EntityType.TipoLicenzaEntity
					Return New TipoLicenzaEntityFactory()
				Case DAL.EntityType.TipoMaterialeEntity
					Return New TipoMaterialeEntityFactory()
				Case DAL.EntityType.TipoQuadroEntity
					Return New TipoQuadroEntityFactory()
				Case DAL.EntityType.TipoSedeEntity
					Return New TipoSedeEntityFactory()
				Case DAL.EntityType.TipoSocioEntity
					Return New TipoSocioEntityFactory()
				Case DAL.EntityType.TitoloContattoEntity
					Return New TitoloContattoEntityFactory()
				Case DAL.EntityType.UnitaMisuraEntity
					Return New UnitaMisuraEntityFactory()
				Case Else
					Return Nothing
			End Select
		End Function
	End Class
		
	''' <summary>Element creator For creating project elements from somewhere Else, like inside Linq providers.</summary>
	Public Class ElementCreator 
		Inherits ElementCreatorBase
		Implements IElementCreator2
	
		''' <summary>Gets the factory of the Entity type with the DAL.EntityType value passed in</summary>
		''' <param name="entityTypeValue">The entity type value.</param>
		''' <returns>the entity factory of the entity type or null if not found</returns>
		Public Function GetFactory(entityTypeValue As Integer) As IEntityFactory2 Implements IElementCreator2.GetFactory
			Return CType(GetFactoryImpl(entityTypeValue), IEntityFactory2)
		End Function
		
		''' <summary>Gets the factory of the Entity type With the .NET type passed In</summary>
		''' <param name="typeOfEntity">The type of entity.</param>
		''' <returns>the entity factory of the entity type Or null If Not found</returns>
		Public Function GetFactory(typeOfEntity As Type) As IEntityFactory2 Implements IElementCreator2.GetFactory
			Return CType(GetFactoryImpl(typeOfEntity), IEntityFactory2)
		End Function

		''' <summary>Creates a New resultset fields Object With the number of field slots reserved As specified</summary>
		''' <param name="numberOfFields">The number of fields.</param>
		''' <returns>ready To use resultsetfields Object</returns>
		Public Function CreateResultsetFields(numberOfFields As Integer) As IEntityFields2  Implements IElementCreator2.CreateResultsetFields
			Return New ResultsetFields(numberOfFields)
		End Function

		''' <summary>Obtains the inheritance info provider instance from the singleton </summary>
		''' <returns>The singleton instance of the inheritance info provider</returns>
		Public Overrides Function ObtainInheritanceInfoProviderInstance() As IInheritanceInfoProvider
			Return ModelInfoProviderSingleton.GetInstance()
		End Function

		''' <summary>Gets the typed view fields of the typedview with the typedviewenum type value specified.</summary>
		''' <param name="typedViewTypeEnumValue">The typed view type enum value.</param>
		''' <returns></returns>
		Public Overrides Function GetTypedViewFields(typedViewTypeEnumValue As Integer) As IEntityFieldsCore 
			Return ModelInfoProviderSingleton.GetInstance().GetTypedViewFields(CType(typedViewTypeEnumValue, TypedViewType).ToString())
		End Function 
		
		''' <summary>Creates a New dynamic relation instance</summary>
		''' <param name="leftOperand">The Left operand.</param>
		''' <returns>ready To use dynamic relation</returns>
		Public Overrides Overloads Function CreateDynamicRelation(leftOperand As DerivedTableDefinition) As IDynamicRelation
			Return New DynamicRelation(leftOperand)
		End Function

		''' <summary>Creates a New dynamic relation instance</summary>
		''' <param name="leftOperand">The Left operand.</param>
		''' <param name="joinType">Type of the Join. If None Is specified, Inner Is assumed.</param>
		''' <param name="rightOperand">The Right operand.</param>
		''' <param name="onClause">The On clause For the Join.</param>
		''' <returns>ready To use dynamic relation</returns>
		Public Overrides Overloads Function CreateDynamicRelation(leftOperand As DerivedTableDefinition, joinType As JoinHint, rightOperand As DerivedTableDefinition, onClause As IPredicate) As IDynamicRelation
			Return New DynamicRelation(leftOperand, joinType, rightOperand, onClause)
		End Function

		''' <summary>Creates a new dynamic relation instance</summary>
		''' <param name="leftOperand">The left operand.</param>
		''' <param name="joinType">Type of the join. If None is specified, Inner is assumed.</param>
		''' <param name="rightOperand">The right operand.</param>
		''' <param name="aliasLeftOperand">The alias of the left operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		''' <param name="onClause">The on clause for the join.</param>
		''' <returns>ready to use dynamic relation</returns>
		Public Overrides Overloads Function CreateDynamicRelation(leftOperand As IEntityFieldCore, joinType As JoinHint, rightOperand As DerivedTableDefinition, aliasLeftOperand As String, onClause As IPredicate) As IDynamicRelation
			Return New DynamicRelation(leftOperand, joinType, rightOperand, aliasLeftOperand, onClause)
		End Function
		

		''' <summary>Creates a New dynamic relation instance</summary>
		''' <param name="leftOperand">The Left operand.</param>
		''' <param name="joinType">Type of the Join. If None Is specified, Inner Is assumed.</param>
		''' <param name="rightOperandEntityName">Name of the entity, which Is used As the Right operand.</param>
		''' <param name="aliasRightOperand">The Alias of the Right operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		''' <param name="onClause">The On clause For the Join.</param>
		''' <returns>ready To use dynamic relation</returns>
		Public Overrides Overloads Function CreateDynamicRelation(leftOperand As DerivedTableDefinition, joinType As JoinHint, rightOperandEntityName As String, aliasRightOperand As String, onClause As IPredicate) As IDynamicRelation
			Return New DynamicRelation(leftOperand, joinType, CType([Enum].Parse(GetType(DAL.EntityType), rightOperandEntityName, False), DAL.EntityType), aliasRightOperand, onClause)
		End Function

		''' <summary>Creates a New dynamic relation instance</summary>
		''' <param name="leftOperandEntityName">Name of the entity which Is used As the Left operand.</param>
		''' <param name="joinType">Type of the Join. If None Is specified, Inner Is assumed.</param>
		''' <param name="rightOperandEntityName">Name of the entity, which Is used As the Right operand.</param>
		''' <param name="aliasLeftOperand">The Alias of the Left operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		''' <param name="aliasRightOperand">The Alias of the Right operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		''' <param name="onClause">The On clause For the Join.</param>
		''' <returns>ready To use dynamic relation</returns>
		Public Overrides Overloads Function CreateDynamicRelation(leftOperandEntityName As String, joinType As JoinHint, rightOperandEntityName As String, aliasLeftOperand As String, aliasRightOperand As String, onClause As IPredicate) As IDynamicRelation
			Return New DynamicRelation(CType([Enum].Parse(GetType(DAL.EntityType), leftOperandEntityName, False), DAL.EntityType), joinType, CType([Enum].Parse(GetType(DAL.EntityType), rightOperandEntityName, False), DAL.EntityType), aliasLeftOperand, aliasRightOperand, onClause)
		End Function
		
		''' <summary>Creates a new dynamic relation instance</summary>
		''' <param name="leftOperand">The left operand.</param>
		''' <param name="joinType">Type of the join. If None is specified, Inner is assumed.</param>
		''' <param name="rightOperandEntityName">Name of the entity, which is used as the right operand.</param>
		''' <param name="aliasLeftOperand">The alias of the left operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		''' <param name="aliasRightOperand">The alias of the right operand. If you don't want to / need to alias the right operand (only alias if you have to), specify string.Empty.</param>
		''' <param name="onClause">The on clause for the join.</param>
		''' <returns>ready to use dynamic relation</returns>
		public Overrides Overloads Function CreateDynamicRelation(leftOperand As IEntityFieldCore, joinType As JoinHint, rightOperandEntityName As String, aliasLeftOperand As String, aliasRightOperand As String, onClause As IPredicate) As IDynamicRelation 
			Return New DynamicRelation(leftOperand, joinType, CType([Enum].Parse(GetType(DAL.EntityType), rightOperandEntityName, False), DAL.EntityType), aliasLeftOperand, aliasRightOperand, onClause)
		End Function
		
		''' <summary>Implementation of the routine which gets the factory of the Entity type With the DAL.EntityType value passed In</summary>
		''' <param name="entityTypeValue">The entity type value.</param>
		''' <returns>the entity factory of the entity type Or null If Not found</returns>
		Protected Overrides Function GetFactoryImpl(entityTypeValue As Integer) As IEntityFactoryCore
			Return EntityFactoryFactory.GetFactory(CType(entityTypeValue, DAL.EntityType))
		End Function

		''' <summary>Implementation of the routine which gets the factory of the Entity type With the .NET type passed In</summary>
		''' <param name="typeOfEntity">The type of entity.</param>
		''' <returns>the entity factory of the entity type Or null If Not found</returns>
		Protected Overrides Function GetFactoryImpl(typeOfEntity As Type) As IEntityFactoryCore 
			Return EntityFactoryFactory.GetFactory(typeOfEntity)
		End Function

	End Class
End Namespace
