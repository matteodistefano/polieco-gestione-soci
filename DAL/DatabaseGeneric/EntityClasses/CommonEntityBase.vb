' //////////////////////////////////////////////////////////////
' // <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
' //////////////////////////////////////////////////////////////
' // Code is generated on: 
' // Code is generated Imports templates: SD.TemplateBindings.SharedTemplates
' // Templates vendor: Solutions Design.
' // Templates version: 
' //////////////////////////////////////////////////////////////
Imports System
Imports System.Collections.Generic
Imports DAL
Imports DAL.HelperClasses
Imports DAL.FactoryClasses
Imports DAL.RelationClasses
Imports SD.LLBLGen.Pro.ORMSupportClasses
Imports System.Runtime.Serialization

' __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
' __LLBLGENPRO_USER_CODE_REGION_END
Namespace DAL.EntityClasses
	''' <summary>Common base class which is the base class for all generated entities which aren't a subtype of another entity.</summary>
	<Serializable()> _
	Public MustInherit Class CommonEntityBase
		Inherits EntityBase2
		' __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfaces
		' __LLBLGENPRO_USER_CODE_REGION_END	

		' __LLBLGENPRO_USER_CODE_REGION_START PrivateMembers
		' __LLBLGENPRO_USER_CODE_REGION_END

		''' <summary>CTor</summary>
		Protected Sub New()
			MyBase.New()
		End Sub

		''' <summary>Protected CTor for deserialization</summary>
		''' <param name="info"></param>
		''' <param name="context"></param>
		Protected Sub New(info As SerializationInfo, context As StreamingContext)
			MyBase.New(info, context)

			' __LLBLGENPRO_USER_CODE_REGION_START DeserializationConstructor
			' __LLBLGENPRO_USER_CODE_REGION_END
		End Sub

		''' <summary>Gets the inheritance info provider instance of the project this entity instance is located in. </summary>
		''' <returns>ready to use inheritance info provider instance.</returns>
		Protected Overrides Function GetInheritanceInfoProvider() As IInheritanceInfoProvider 
			Return ModelInfoProviderSingleton.GetInstance()
		End Function
		
		''' <summary>Creates the ITypeDefaultValue instance used To provide Default values For value types which aren't of type nullable(of T)</summary>
		''' <returns></returns>
		Protected Overrides Function CreateTypeDefaultValueProvider() As ITypeDefaultValue 
			Return New TypeDefaultValue()
		End Function
				
		''' <summary>Creates the entity collection and stores it in destination if destination is null</summary>
		''' <typeparam name="T">type of the element to store in the collection</typeparam>
		''' <typeparam name="TFactory">The type of the factory to pass to the entitycollection ctor.</typeparam>
		''' <param name="navigatorName">Name of the property this collection is for.</param>
		''' <param name="setContainingEntityInfo">if set to <see langword="true"/> the collection is for an 1:n relationship, and the containing entity info has to be set</param>
		''' <param name="forMN">if set to <see langword="true"/> the collection is for an m:n relationship, otherwise for an 1:n relationship</param>
		''' <param name="destination">The destination member variable.</param>
		''' <returns>the collection referred to by destination if destination isn't null, otherwise the newly created collection (which is then stored in destination</returns>
		Protected Function GetOrCreateEntityCollection(Of T As {EntityBase2, IEntity2}, TFactory)(navigatorName As string, setContainingEntityInfo As Boolean, forMN As Boolean, ByRef destination As EntityCollection(Of T)) As EntityCollection(Of T) 
			If Destination Is Nothing Then
				Destination = New EntityCollection(Of T)(EntityFactoryCache2.GetEntityFactory(GetType(TFactory)))
				If forMN Then
					CType(destination, IEntityCollectionCore).IsForMN = true
				Else
					if setContainingEntityInfo Then
						destination.SetContainingEntityInfo(Me, navigatorName)
					End If
				End If
				destination.ActiveContext = Me.ActiveContext
			End If
			Return destination
		End Function
		
		''' <inheritdoc/>
		Protected Overrides Function CreateEntityCollectionForType(Of T As EntityBase2)() As IEntityCollection2
			Return CommonEntityBase.CreateEntityCollection(Of T)()
		End Function
		
		''' <summary>Creates the entity collection for the types specified</summary>
		''' <typeparam name="T">type of the element to store in the collection</typeparam>
		Protected Shared Function CreateEntityCollection(Of T As {EntityBase2, IEntity2})() As EntityCollection(Of T)
			Return New EntityCollection(Of T)(EntityFactoryFactory.GetFactory(GetType(T)))
		End Function

		''' <summary>The EntityType enum type</summary>
		Protected Overrides ReadOnly Property LLBLGenProEntityTypeEnumType As Type
			Get 
				Return GetType(DAL.EntityType)
			End Get
		End Property

		' __LLBLGENPRO_USER_CODE_REGION_START CustomEntityCode
		' __LLBLGENPRO_USER_CODE_REGION_END

	End Class
End Namespace
