' //////////////////////////////////////////////////////////////
' // <auto-generated>This code was generated by LLBLGen Pro 5.9.</auto-generated>
' //////////////////////////////////////////////////////////////
' // Code is generated on: 
' // Code is generated using templates: SD.TemplateBindings.SharedTemplates
' // Templates vendor: Solutions Design.
' // Templates version: 
' //////////////////////////////////////////////////////////////
Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Collections
Imports System.Collections.Specialized
Imports System.Runtime.Serialization
Imports DAL
Imports DAL.FactoryClasses
Imports DAL.HelperClasses
Imports SD.LLBLGen.Pro.ORMSupportClasses


' __LLBLGENPRO_USER_CODE_REGION_START AdditionalNamespaces
' __LLBLGENPRO_USER_CODE_REGION_END
Namespace DAL.TypedViewClasses

	''' <summary>Typed datatable for the view 'VwAziendeAllegato'.<br/><br/></summary>
	<Serializable(), System.ComponentModel.DesignerCategory("Code"), ToolboxItem(True), DesignTimeVisible(True)> _
	Public Class VwAziendeAllegatoTypedView 
		Inherits TypedViewBase(Of VwAziendeAllegatoRow)
		Implements ITypedView2

		' __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfacesView
		' __LLBLGENPRO_USER_CODE_REGION_END	

#Region "Class Member Declarations"
		Private _columnId As DataColumn
		Private _columnRagioneSociale As DataColumn
		Private _columnPartitaIva As DataColumn
		Private _columnIndirizzo As DataColumn
		Private _columnLocalita As DataColumn
		Private _columnCap As DataColumn
		Private _columnProvincia As DataColumn
		Private _columnNazione As DataColumn
		Private _columnNote As DataColumn
		Private _columnIdSocio As DataColumn
		Private _columnNumFornitore As DataColumn
		Private _columnNumRicevitore As DataColumn
		Private _fields As IEntityFields2
		
		' __LLBLGENPRO_USER_CODE_REGION_START AdditionalMembers
		' __LLBLGENPRO_USER_CODE_REGION_END
		Private Shared _customProperties As Hashtable
		Private Shared _fieldsCustomProperties As Hashtable
#End Region

#Region "Class Constants"
		''' <summary>
		''' The amount of fields in the resultset.
		''' </summary>
		Private Const AmountOfFields As Integer = 12
#End Region
		
		''' <summary>Static CTor for setting up custom property hashtables.</summary>
		Shared Sub New()
			SetupCustomPropertyHashtables()
		End Sub

		''' <summary>CTor</summary>
		Public Sub New()
			MyBase.New("VwAziendeAllegato")
			InitClass()
		End Sub
#If Not CF Then		
		''' <summary>
		''' Protected constructor for deserialization.
		''' </summary>
		''' <param name="info"></param>
		''' <param name="context"></param>
		Protected Sub New(info As SerializationInfo, context As StreamingContext)
			MyBase.New(info, context)
			If SerializationHelper.Optimization = SerializationOptimization.None Then
				InitMembers()
			End If
		End Sub
#End If		
		''' <summary>
		''' Gets the IEntityFields2 collection of fields of this typed view. 
		''' </summary>
		''' <returns>Ready to use IEntityFields2 collection object.</returns>
		Public Overridable Function GetFieldsInfo() As IEntityFields2 Implements ITypedView2.GetFieldsInfo
			Return _fields
		End Function

		''' <summary>
		''' Creates a New typed row during the build of the datatable during a Fill session by a dataadapter.
		''' </summary>
		''' <param name="rowBuilder">supplied row builder to pass to the typed row</param>
		''' <returns>the New typed datarow</returns>
		Protected Overrides Function NewRowFromBuilder(rowBuilder As DataRowBuilder) As DataRow
			Return New VwAziendeAllegatoRow(rowBuilder)
		End Function

		''' <summary>
		''' Initialize the datastructures.
		''' </summary>
		Protected Overrides Overloads Sub InitClass()
			TableName = "VwAziendeAllegato"
			_columnId = GeneralUtils.CreateTypedDataTableColumn("Id", "Id", GetType(System.Int32), Me.Columns)
			_columnRagioneSociale = GeneralUtils.CreateTypedDataTableColumn("RagioneSociale", "RagioneSociale", GetType(System.String), Me.Columns)
			_columnPartitaIva = GeneralUtils.CreateTypedDataTableColumn("PartitaIva", "PartitaIva", GetType(System.String), Me.Columns)
			_columnIndirizzo = GeneralUtils.CreateTypedDataTableColumn("Indirizzo", "Indirizzo", GetType(System.String), Me.Columns)
			_columnLocalita = GeneralUtils.CreateTypedDataTableColumn("Localita", "Localita", GetType(System.String), Me.Columns)
			_columnCap = GeneralUtils.CreateTypedDataTableColumn("Cap", "Cap", GetType(System.String), Me.Columns)
			_columnProvincia = GeneralUtils.CreateTypedDataTableColumn("Provincia", "Provincia", GetType(System.String), Me.Columns)
			_columnNazione = GeneralUtils.CreateTypedDataTableColumn("Nazione", "Nazione", GetType(System.String), Me.Columns)
			_columnNote = GeneralUtils.CreateTypedDataTableColumn("Note", "Note", GetType(System.String), Me.Columns)
			_columnIdSocio = GeneralUtils.CreateTypedDataTableColumn("IdSocio", "IdSocio", GetType(System.Int32), Me.Columns)
			_columnNumFornitore = GeneralUtils.CreateTypedDataTableColumn("NumFornitore", "NumFornitore", GetType(System.Int32), Me.Columns)
			_columnNumRicevitore = GeneralUtils.CreateTypedDataTableColumn("NumRicevitore", "NumRicevitore", GetType(System.Int32), Me.Columns)
			_fields = ModelInfoProviderSingleton.GetInstance().GetTypedViewFields("VwAziendeAllegatoTypedView")
			' __LLBLGENPRO_USER_CODE_REGION_START AdditionalFields
			' be sure To Call _fields.Expand(number of New fields) first. 
			' __LLBLGENPRO_USER_CODE_REGION_END
			OnInitialized()
		End Sub

		''' <summary>
		''' Initializes the members, after a clone action.
		''' </summary>
		Private Sub InitMembers()
			_columnId = Me.Columns("Id")
			_columnRagioneSociale = Me.Columns("RagioneSociale")
			_columnPartitaIva = Me.Columns("PartitaIva")
			_columnIndirizzo = Me.Columns("Indirizzo")
			_columnLocalita = Me.Columns("Localita")
			_columnCap = Me.Columns("Cap")
			_columnProvincia = Me.Columns("Provincia")
			_columnNazione = Me.Columns("Nazione")
			_columnNote = Me.Columns("Note")
			_columnIdSocio = Me.Columns("IdSocio")
			_columnNumFornitore = Me.Columns("NumFornitore")
			_columnNumRicevitore = Me.Columns("NumRicevitore")
			_fields = ModelInfoProviderSingleton.GetInstance().GetTypedViewFields("VwAziendeAllegatoTypedView")
			
			' __LLBLGENPRO_USER_CODE_REGION_START InitMembers
			' __LLBLGENPRO_USER_CODE_REGION_END
		End Sub

		''' <summary>
		''' Initializes the hashtables for the TypedView type and TypedView field custom properties. 
		''' </summary>
		Private Shared Sub SetupCustomPropertyHashtables()
			_customProperties = New Hashtable()
			_fieldsCustomProperties = New Hashtable()
			Dim fieldHashtable As Hashtable
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("Id", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("RagioneSociale", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("PartitaIva", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("Indirizzo", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("Localita", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("Cap", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("Provincia", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("Nazione", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("Note", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("IdSocio", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("NumFornitore", fieldHashtable)
			fieldHashtable = New Hashtable()
			_fieldsCustomProperties.Add("NumRicevitore", fieldHashtable)
		End Sub

		''' <summary>
		''' Clones this instance.
		''' </summary>
		''' <returns>A clone of this instance</returns>
		Public Overrides Function Clone() As DataTable
			Dim cloneToReturn As VwAziendeAllegatoTypedView = CType(MyBase.Clone(), VwAziendeAllegatoTypedView)
			cloneToReturn.InitMembers()
			Return cloneToReturn
		End Function

#If Not CF Then
		''' <summary>
		''' Creates a New instance of the DataTable class.
		''' </summary>
		''' <returns>a New instance of a datatable with this schema.</returns>
		Protected Overrides Function CreateInstance() As DataTable
			Return New VwAziendeAllegatoTypedView()
		End Function
#End If

#Region "Class Property Declarations"
		''' <summary>Returns the number of rows in this typed view</summary>
		Public Shadows ReadOnly Property Count() As Integer Implements ITypedView2.Count
			' Necessary re-implementation as VB.NET compiler can't implement interface members through inheritance.
			Get
				Return MyBase.Count
			End Get
		End Property

		''' <summary>
		''' The custom properties for this TypedView type.
		''' </summary>
		''' <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		Public Shared ReadOnly Property CustomProperties() As Hashtable
			Get
				Return _customProperties
			End Get
		End Property

		''' <summary>
		''' The custom properties for the type of this TypedView instance.
		''' </summary>
		''' <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		<System.ComponentModel.Browsable(False)> _
		Public Overridable ReadOnly Property CustomPropertiesOfType() As Hashtable
			Get
				Return VwAziendeAllegatoTypedView.CustomProperties
			End Get
		End Property

		''' <summary>
		''' The custom properties for the fields of this TypedView type. The returned Hashtable contains per fieldname a hashtable of name-value
		''' pairs. 
		''' </summary>
		''' <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		Public Shared ReadOnly Property FieldsCustomProperties() As Hashtable
			Get
				Return _fieldsCustomProperties
			End Get
		End Property

		''' <summary>
		''' The custom properties for the fields of the type of this TypedView instance. The returned Hashtable contains per fieldname a hashtable of name-value
		''' pairs. 
		''' </summary>
		''' <remarks>The data returned from this property should be considered read-only: it is not thread safe to alter this data at runtime.</remarks>
		<System.ComponentModel.Browsable(False)> _
		Public Overridable ReadOnly Property FieldsCustomPropertiesOfType() As Hashtable
			Get
				Return VwAziendeAllegatoTypedView.FieldsCustomProperties
			End Get
		End Property


		''' <summary>Returns the column Object belonging to the TypedView field Id</summary>
		ReadOnly Friend Property IdColumn As DataColumn
			Get 
				Return _columnId 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field RagioneSociale</summary>
		ReadOnly Friend Property RagioneSocialeColumn As DataColumn
			Get 
				Return _columnRagioneSociale 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field PartitaIva</summary>
		ReadOnly Friend Property PartitaIvaColumn As DataColumn
			Get 
				Return _columnPartitaIva 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field Indirizzo</summary>
		ReadOnly Friend Property IndirizzoColumn As DataColumn
			Get 
				Return _columnIndirizzo 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field Localita</summary>
		ReadOnly Friend Property LocalitaColumn As DataColumn
			Get 
				Return _columnLocalita 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field Cap</summary>
		ReadOnly Friend Property CapColumn As DataColumn
			Get 
				Return _columnCap 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field Provincia</summary>
		ReadOnly Friend Property ProvinciaColumn As DataColumn
			Get 
				Return _columnProvincia 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field Nazione</summary>
		ReadOnly Friend Property NazioneColumn As DataColumn
			Get 
				Return _columnNazione 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field Note</summary>
		ReadOnly Friend Property NoteColumn As DataColumn
			Get 
				Return _columnNote 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field IdSocio</summary>
		ReadOnly Friend Property IdSocioColumn As DataColumn
			Get 
				Return _columnIdSocio 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field NumFornitore</summary>
		ReadOnly Friend Property NumFornitoreColumn As DataColumn
			Get 
				Return _columnNumFornitore 
			End Get
		End Property

		''' <summary>Returns the column Object belonging to the TypedView field NumRicevitore</summary>
		ReadOnly Friend Property NumRicevitoreColumn As DataColumn
			Get 
				Return _columnNumRicevitore 
			End Get
		End Property

		' __LLBLGENPRO_USER_CODE_REGION_START AdditionalColumnProperties
		' __LLBLGENPRO_USER_CODE_REGION_END
#End Region

#Region "Custom Typed View code"
	
	' __LLBLGENPRO_USER_CODE_REGION_START CustomTypedViewCode
	' __LLBLGENPRO_USER_CODE_REGION_END
#End Region

#Region "Included Code"

#End Region
	End Class

	''' <summary>Typed datarow for the typed datatable VwAziendeAllegato</summary>
	Public Class VwAziendeAllegatoRow 
		Inherits DataRow
		' __LLBLGENPRO_USER_CODE_REGION_START AdditionalInterfacesRow
		' __LLBLGENPRO_USER_CODE_REGION_END	

#Region "Class Member Declarations"
		Private _parent As VwAziendeAllegatoTypedView
#End Region

		''' <summary>CTor</summary>
		''' <param name="rowBuilder">Row builder Object to use when building this row</param>
		Protected Friend Sub New(rowBuilder As DataRowBuilder)
			MyBase.New(rowBuilder) 
			_parent = CType(Me.Table, VwAziendeAllegatoTypedView)
		End Sub

#Region "Class Property Declarations"

		''' <summary>Gets / sets the value of the TypedView field Id<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."Id"<br/>
		''' View field characteristics (type, precision, scale, length): Int, 10, 0, 0</remarks>
		Public Property [Id]() As System.Int32
			Get 
				Return CType(If(IsIdNull(), TypeDefaultValue.GetDefaultValue(GetType(System.Int32)), Me(_parent.IdColumn)), System.Int32)
			End Get
			Set 
				Me(_parent.IdColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field Id is NULL, False otherwise.</summary>
		Public Function IsIdNull() As Boolean
			Return IsNull(_parent.IdColumn)
		End Function

		''' <summary>Sets the TypedView field Id to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetIdNull() 
			Me(_parent.IdColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field RagioneSociale<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."RagioneSociale"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 200</remarks>
		Public Property [RagioneSociale]() As System.String
			Get 
				Return CType(If(IsRagioneSocialeNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.RagioneSocialeColumn)), System.String)
			End Get
			Set 
				Me(_parent.RagioneSocialeColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field RagioneSociale is NULL, False otherwise.</summary>
		Public Function IsRagioneSocialeNull() As Boolean
			Return IsNull(_parent.RagioneSocialeColumn)
		End Function

		''' <summary>Sets the TypedView field RagioneSociale to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetRagioneSocialeNull() 
			Me(_parent.RagioneSocialeColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field PartitaIva<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."PartitaIva"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 20</remarks>
		Public Property [PartitaIva]() As System.String
			Get 
				Return CType(If(IsPartitaIvaNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.PartitaIvaColumn)), System.String)
			End Get
			Set 
				Me(_parent.PartitaIvaColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field PartitaIva is NULL, False otherwise.</summary>
		Public Function IsPartitaIvaNull() As Boolean
			Return IsNull(_parent.PartitaIvaColumn)
		End Function

		''' <summary>Sets the TypedView field PartitaIva to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetPartitaIvaNull() 
			Me(_parent.PartitaIvaColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field Indirizzo<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."Indirizzo"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 200</remarks>
		Public Property [Indirizzo]() As System.String
			Get 
				Return CType(If(IsIndirizzoNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.IndirizzoColumn)), System.String)
			End Get
			Set 
				Me(_parent.IndirizzoColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field Indirizzo is NULL, False otherwise.</summary>
		Public Function IsIndirizzoNull() As Boolean
			Return IsNull(_parent.IndirizzoColumn)
		End Function

		''' <summary>Sets the TypedView field Indirizzo to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetIndirizzoNull() 
			Me(_parent.IndirizzoColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field Localita<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."Localita"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 200</remarks>
		Public Property [Localita]() As System.String
			Get 
				Return CType(If(IsLocalitaNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.LocalitaColumn)), System.String)
			End Get
			Set 
				Me(_parent.LocalitaColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field Localita is NULL, False otherwise.</summary>
		Public Function IsLocalitaNull() As Boolean
			Return IsNull(_parent.LocalitaColumn)
		End Function

		''' <summary>Sets the TypedView field Localita to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetLocalitaNull() 
			Me(_parent.LocalitaColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field Cap<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."Cap"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 10</remarks>
		Public Property [Cap]() As System.String
			Get 
				Return CType(If(IsCapNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.CapColumn)), System.String)
			End Get
			Set 
				Me(_parent.CapColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field Cap is NULL, False otherwise.</summary>
		Public Function IsCapNull() As Boolean
			Return IsNull(_parent.CapColumn)
		End Function

		''' <summary>Sets the TypedView field Cap to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetCapNull() 
			Me(_parent.CapColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field Provincia<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."Provincia"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 3</remarks>
		Public Property [Provincia]() As System.String
			Get 
				Return CType(If(IsProvinciaNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.ProvinciaColumn)), System.String)
			End Get
			Set 
				Me(_parent.ProvinciaColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field Provincia is NULL, False otherwise.</summary>
		Public Function IsProvinciaNull() As Boolean
			Return IsNull(_parent.ProvinciaColumn)
		End Function

		''' <summary>Sets the TypedView field Provincia to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetProvinciaNull() 
			Me(_parent.ProvinciaColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field Nazione<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."Nazione"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 50</remarks>
		Public Property [Nazione]() As System.String
			Get 
				Return CType(If(IsNazioneNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.NazioneColumn)), System.String)
			End Get
			Set 
				Me(_parent.NazioneColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field Nazione is NULL, False otherwise.</summary>
		Public Function IsNazioneNull() As Boolean
			Return IsNull(_parent.NazioneColumn)
		End Function

		''' <summary>Sets the TypedView field Nazione to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetNazioneNull() 
			Me(_parent.NazioneColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field Note<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."Note"<br/>
		''' View field characteristics (type, precision, scale, length): VarChar, 0, 0, 1000</remarks>
		Public Property [Note]() As System.String
			Get 
				Return CType(If(IsNoteNull(), TypeDefaultValue.GetDefaultValue(GetType(System.String)), Me(_parent.NoteColumn)), System.String)
			End Get
			Set 
				Me(_parent.NoteColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field Note is NULL, False otherwise.</summary>
		Public Function IsNoteNull() As Boolean
			Return IsNull(_parent.NoteColumn)
		End Function

		''' <summary>Sets the TypedView field Note to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetNoteNull() 
			Me(_parent.NoteColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field IdSocio<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."IdSocio"<br/>
		''' View field characteristics (type, precision, scale, length): Int, 10, 0, 0</remarks>
		Public Property [IdSocio]() As System.Int32
			Get 
				Return CType(If(IsIdSocioNull(), TypeDefaultValue.GetDefaultValue(GetType(System.Int32)), Me(_parent.IdSocioColumn)), System.Int32)
			End Get
			Set 
				Me(_parent.IdSocioColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field IdSocio is NULL, False otherwise.</summary>
		Public Function IsIdSocioNull() As Boolean
			Return IsNull(_parent.IdSocioColumn)
		End Function

		''' <summary>Sets the TypedView field IdSocio to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetIdSocioNull() 
			Me(_parent.IdSocioColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field NumFornitore<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."NumFornitore"<br/>
		''' View field characteristics (type, precision, scale, length): Int, 10, 0, 0</remarks>
		Public Property [NumFornitore]() As System.Int32
			Get 
				Return CType(If(IsNumFornitoreNull(), TypeDefaultValue.GetDefaultValue(GetType(System.Int32)), Me(_parent.NumFornitoreColumn)), System.Int32)
			End Get
			Set 
				Me(_parent.NumFornitoreColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field NumFornitore is NULL, False otherwise.</summary>
		Public Function IsNumFornitoreNull() As Boolean
			Return IsNull(_parent.NumFornitoreColumn)
		End Function

		''' <summary>Sets the TypedView field NumFornitore to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetNumFornitoreNull() 
			Me(_parent.NumFornitoreColumn) = System.Convert.DBNull
		End Sub

		''' <summary>Gets / sets the value of the TypedView field NumRicevitore<br/><br/></summary>
		''' <remarks>Mapped on view field: "vwAziendeAllegato"."NumRicevitore"<br/>
		''' View field characteristics (type, precision, scale, length): Int, 10, 0, 0</remarks>
		Public Property [NumRicevitore]() As System.Int32
			Get 
				Return CType(If(IsNumRicevitoreNull(), TypeDefaultValue.GetDefaultValue(GetType(System.Int32)), Me(_parent.NumRicevitoreColumn)), System.Int32)
			End Get
			Set 
				Me(_parent.NumRicevitoreColumn) = Value
			End Set
		End Property

		''' <summary>Returns True if the TypedView field NumRicevitore is NULL, False otherwise.</summary>
		Public Function IsNumRicevitoreNull() As Boolean
			Return IsNull(_parent.NumRicevitoreColumn)
		End Function

		''' <summary>Sets the TypedView field NumRicevitore to NULL. Not recommended a typed view should be used as a readonly Object.</summary>
		Public Sub SetNumRicevitoreNull() 
			Me(_parent.NumRicevitoreColumn) = System.Convert.DBNull
		End Sub

#End Region

#Region "Custom TypedView Row code"
	
	' __LLBLGENPRO_USER_CODE_REGION_START CustomTypedViewRowCode
	' __LLBLGENPRO_USER_CODE_REGION_END
#End Region

#Region "Included Row Code"

#End Region
	End Class
End Namespace